/** Declaration file generated by dts-gen */

export class Client {
	constructor(config: any);

	events: any;

	organizations: any;

	projects: any;

	releases: any;

	teams: any;

	delete(path: any, callback: any): any;

	get(path: any, params: any, callback: any): any;

	post(path: any, body: any, callback: any): any;

	put(path: any, body: any, callback: any): any;

	request(path: any, options: any, callback: any): any;
}

export class DSN {
	constructor(dsn: any);

	static prototype: {
		project: any;
		publicKey: any;
		secretKey: any;
		uri: string;
	};
}

export class Organizations {
	constructor(client: any);

	create(body: any, callback: any): any;

	delete(orgSlug: any, callback: any): any;

	get(orgSlug: any, callback: any): any;

	projects(orgSlug: any, callback: any): any;

	update(orgSlug: any, body: any, callback: any): any;
}

export class Projects {
	constructor(client: any);

	createKey(orgSlug: any, projectSlug: any, body: any, callback: any): any;

	delete(orgSlug: any, projectSlug: any, callback: any): any;

	deleteKey(orgSlug: any, projectSlug: any, keyId: any, callback: any): any;

	get(orgSlug: any, projectSlug: any, callback: any): any;

	keys(orgSlug: any, projectSlug: any, callback: any): any;

	releases(orgSlug: any, projectSlug: any, callback: any): any;

	stats(orgSlug: any, projectSlug: any, callback: any): any;

	tag(orgSlug: any, projectSlug: any, key: any, callback: any): any;

	update(orgSlug: any, projectSlug: any, body: any, callback: any): any;

	updateKey(
		orgSlug: any,
		projectSlug: any,
		key: any,
		body: any,
		callback: any
	): any;

	users(orgSlug: any, projectSlug: any, callback: any): any;
}

export class Releases {
	constructor(client: any);

	create(orgSlug: any, projectSlug: any, body: any, callback: any): any;

	createFile(
		orgSlug: any,
		projectSlug: any,
		version: any,
		formData: any,
		callback: any
	): any;

	delete(orgSlug: any, projectSlug: any, version: any, callback: any): any;

	deleteFile(
		orgSlug: any,
		projectSlug: any,
		version: any,
		fileId: any,
		callback: any
	): any;

	files(orgSlug: any, projectSlug: any, version: any, callback: any): any;

	get(orgSlug: any, projectSlug: any, version: any, callback: any): any;

	getFile(
		orgSlug: any,
		projectSlug: any,
		version: any,
		fileId: any,
		callback: any
	): any;

	update(
		orgSlug: any,
		projectSlug: any,
		version: any,
		body: any,
		callback: any
	): any;

	updateFile(
		orgSlug: any,
		projectSlug: any,
		version: any,
		fileId: any,
		body: any,
		callback: any
	): any;
}

export class Teams {
	constructor(client: any);

	create(orgSlug: any, body: any, callback: any): any;

	createProject(orgSlug: any, teamSlug: any, body: any, callback: any): any;

	delete(orgSlug: any, teamSlug: any, callback: any): any;

	get(orgSlug: any, teamSlug: any, callback: any): any;

	list(orgSlug: any, callback: any): any;

	projects(orgSlug: any, teamSlug: any, callback: any): any;

	stats(orgSlug: any, teamSlug: any, callback: any): any;

	update(orgSlug: any, teamSlug: any, body: any, callback: any): any;
}

export function Events(client: any): void;

export namespace Client {
	namespace prototype {
		const events: any;

		const organizations: any;

		const projects: any;

		const releases: any;

		const teams: any;

		function get(path: any, params: any, callback: any): any;

		function post(path: any, body: any, callback: any): any;

		function put(path: any, body: any, callback: any): any;

		function request(path: any, options: any, callback: any): any;

		namespace get {
			const prototype: {};
		}

		namespace post {
			const prototype: {};
		}

		namespace put {
			const prototype: {};
		}

		namespace request {
			const prototype: {};
		}
	}
}

export namespace Events {
	const prototype: {};
}

export namespace Organizations {
	namespace prototype {
		function create(body: any, callback: any): any;

		function get(orgSlug: any, callback: any): any;

		function projects(orgSlug: any, callback: any): any;

		function update(orgSlug: any, body: any, callback: any): any;

		namespace create {
			const prototype: {};
		}

		namespace get {
			const prototype: {};
		}

		namespace projects {
			const prototype: {};
		}

		namespace update {
			const prototype: {};
		}
	}
}

export namespace Projects {
	namespace prototype {
		function createKey(
			orgSlug: any,
			projectSlug: any,
			body: any,
			callback: any
		): any;

		function deleteKey(
			orgSlug: any,
			projectSlug: any,
			keyId: any,
			callback: any
		): any;

		function get(orgSlug: any, projectSlug: any, callback: any): any;

		function keys(orgSlug: any, projectSlug: any, callback: any): any;

		function releases(orgSlug: any, projectSlug: any, callback: any): any;

		function stats(orgSlug: any, projectSlug: any, callback: any): any;

		function tag(
			orgSlug: any,
			projectSlug: any,
			key: any,
			callback: any
		): any;

		function update(
			orgSlug: any,
			projectSlug: any,
			body: any,
			callback: any
		): any;

		function updateKey(
			orgSlug: any,
			projectSlug: any,
			key: any,
			body: any,
			callback: any
		): any;

		function users(orgSlug: any, projectSlug: any, callback: any): any;

		namespace createKey {
			const prototype: {};
		}

		namespace deleteKey {
			const prototype: {};
		}

		namespace get {
			const prototype: {};
		}

		namespace keys {
			const prototype: {};
		}

		namespace releases {
			const prototype: {};
		}

		namespace stats {
			const prototype: {};
		}

		namespace tag {
			const prototype: {};
		}

		namespace update {
			const prototype: {};
		}

		namespace updateKey {
			const prototype: {};
		}

		namespace users {
			const prototype: {};
		}
	}
}

export namespace Releases {
	namespace prototype {
		function create(
			orgSlug: any,
			projectSlug: any,
			body: any,
			callback: any
		): any;

		function createFile(
			orgSlug: any,
			projectSlug: any,
			version: any,
			formData: any,
			callback: any
		): any;

		function deleteFile(
			orgSlug: any,
			projectSlug: any,
			version: any,
			fileId: any,
			callback: any
		): any;

		function files(
			orgSlug: any,
			projectSlug: any,
			version: any,
			callback: any
		): any;

		function get(
			orgSlug: any,
			projectSlug: any,
			version: any,
			callback: any
		): any;

		function getFile(
			orgSlug: any,
			projectSlug: any,
			version: any,
			fileId: any,
			callback: any
		): any;

		function update(
			orgSlug: any,
			projectSlug: any,
			version: any,
			body: any,
			callback: any
		): any;

		function updateFile(
			orgSlug: any,
			projectSlug: any,
			version: any,
			fileId: any,
			body: any,
			callback: any
		): any;

		namespace create {
			const prototype: {};
		}

		namespace createFile {
			const prototype: {};
		}

		namespace deleteFile {
			const prototype: {};
		}

		namespace files {
			const prototype: {};
		}

		namespace get {
			const prototype: {};
		}

		namespace getFile {
			const prototype: {};
		}

		namespace update {
			const prototype: {};
		}

		namespace updateFile {
			const prototype: {};
		}
	}
}

export namespace Teams {
	namespace prototype {
		function create(orgSlug: any, body: any, callback: any): any;

		function createProject(
			orgSlug: any,
			teamSlug: any,
			body: any,
			callback: any
		): any;

		function get(orgSlug: any, teamSlug: any, callback: any): any;

		function list(orgSlug: any, callback: any): any;

		function projects(orgSlug: any, teamSlug: any, callback: any): any;

		function stats(orgSlug: any, teamSlug: any, callback: any): any;

		function update(
			orgSlug: any,
			teamSlug: any,
			body: any,
			callback: any
		): any;

		namespace create {
			const prototype: {};
		}

		namespace createProject {
			const prototype: {};
		}

		namespace get {
			const prototype: {};
		}

		namespace list {
			const prototype: {};
		}

		namespace projects {
			const prototype: {};
		}

		namespace stats {
			const prototype: {};
		}

		namespace update {
			const prototype: {};
		}
	}
}
